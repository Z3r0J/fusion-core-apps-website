---
import PlaceholderApp from "@/assets/placeholder-app.svg";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { ChartNoAxesCombined, Eye, Layers, Plus, SquarePen, Trash2, X } from "lucide-react";
const apps = await getCollection("apps");
---

<BaseLayout
	description="Manage and publish your mobile applications"
	noindex={true}
	title="Admin Panel — FusionCore Apps"
>
	<div class="admin-panel">
		<!-- Header -->
		<div class="admin-panel__header mb-8 border-b border-gray-200 pb-8 dark:border-gray-800">
			<h1 class="mb-2 text-3xl font-bold text-gray-900 dark:text-white">Admin panel</h1>
			<p class="text-gray-600 dark:text-gray-400">
				Manage and publish your mobile applications to the store.
			</p>
		</div>

		<!-- Quick Actions -->
		<div class="admin-panel__actions mb-12 grid gap-6 md:grid-cols-3">
			<button
				aria-label="Publish new app"
				class="button button--primary justify-start p-6 text-left"
				data-open-modal
			>
				<div class="flex items-center gap-4">
					<div class="flex h-12 w-12 items-center justify-center rounded-xl bg-white/20">
						<Plus className="h-6 w-6" />
					</div>
					<div>
						<h3 class="font-semibold">Publish new app</h3>
						<p class="text-sm opacity-90">Add a new application to your store</p>
					</div>
				</div>
			</button>

			<a
				aria-label="Manage Apps"
				class="button button--secondary justify-start p-6 text-left"
				href="/admin/apps"
			>
				<div class="flex items-center gap-4">
					<div
						class="flex h-12 w-12 items-center justify-center rounded-xl bg-gray-100 dark:bg-gray-800"
					>
						<Layers className="h-6 w-6 text-gray-600 dark:text-gray-400" />
					</div>
					<div>
						<h3 class="font-semibold text-gray-900 dark:text-white">Manage apps</h3>
						<p class="text-sm text-gray-600 dark:text-gray-400">Edit or remove existing apps</p>
					</div>
				</div>
			</a>

			<a
				aria-label="Analytics"
				class="button button--secondary justify-start p-6 text-left"
				href="/admin/analytics"
			>
				<div class="flex items-center gap-4">
					<div
						class="flex h-12 w-12 items-center justify-center rounded-xl bg-gray-100 dark:bg-gray-800"
					>
						<ChartNoAxesCombined className="h-6 w-6 text-gray-600 dark:text-gray-400" />
					</div>
					<div>
						<h3 class="font-semibold text-gray-900 dark:text-white">Analytics</h3>
						<p class="text-sm text-gray-600 dark:text-gray-400">View download stats and metrics</p>
					</div>
				</div>
			</a>
		</div>

		<!-- Current Apps -->
		<div class="admin-panel__apps">
			<div class="mb-6 flex items-center justify-between">
				<h2 class="text-2xl font-bold text-gray-900 dark:text-white">
					Published apps ({apps.length})
				</h2>
				<button class="button button--primary" data-open-modal>
					<Plus className="mr-2 h-5 w-5" />
					Add new app
				</button>
			</div>

			{
				apps.length > 0 ? (
					<div class="grid gap-6">
						{apps.map((app) => (
							<div class="card flex items-center gap-6 p-6">
								{app.data.icon ? (
									<Image
										alt={app.data.title}
										class="h-16 w-16 rounded-2xl shadow-sm"
										height={64}
										loading={"eager"}
										src={app.data.icon}
										width={64}
									/>
								) : (
									<PlaceholderApp class="h-16 w-16 rounded-2xl border border-gray-200 bg-white shadow-lg dark:border-gray-800 dark:bg-gray-900" />
								)}

								<div class="flex-1">
									<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
										{app.data.title}
									</h3>
									<p class="mt-1 text-gray-600 dark:text-gray-400">{app.data.tagline}</p>
									<div class="mt-3 flex items-center gap-4">
										<span class="inline-flex items-center rounded-full bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700 dark:bg-gray-800 dark:text-gray-300">
											{app.data.category}
										</span>
										<span class="text-sm text-gray-500 dark:text-gray-400">
											{app.data.downloads || "1K+"} downloads
										</span>
									</div>
								</div>

								<div class="flex items-center gap-3">
									<a class="button button--ghost" href={`/apps/${app.slug}`} target="_blank">
										<Eye className="mr-2 h-4 w-4" />
										View
									</a>
									<button class="button button--secondary" onclick={`editApp('${app.slug}')`}>
										<SquarePen className="mr-2 h-4 w-4" />
										Edit
									</button>
									<button
										class="button button--danger"
										onclick={`deleteApp('${app.slug}', '${app.data.title}')`}
									>
										<Trash2 className="mr-2 h-4 w-4" />
										Delete
									</button>
								</div>
							</div>
						))}
					</div>
				) : (
					<div class="py-16 text-center">
						<div class="mx-auto mb-6 flex h-24 w-24 items-center justify-center rounded-2xl bg-gray-100 dark:bg-gray-800">
							<Layers className="h-12 w-12 text-gray-400" />
						</div>
						<h3 class="mb-2 text-xl font-semibold text-gray-900 dark:text-white">
							No apps published
						</h3>
						<p class="mb-6 text-gray-600 dark:text-gray-400">
							Get started by publishing your first mobile application.
						</p>
						<button class="button button--primary" data-open-modal>
							Publish your first app
						</button>
					</div>
				)
			}
		</div>
	</div>

	<!-- Publish App Modal -->
	<div
		class="fixed inset-0 z-50 hidden items-start justify-center bg-black/50 p-8 backdrop-blur-sm"
		id="publishModal"
	>
		<div
			class="modal__content mx-auto mt-8 max-h-[90vh] w-full max-w-2xl overflow-y-auto rounded-2xl bg-white shadow-2xl dark:bg-gray-900"
		>
			<div class="modal__header border-b border-gray-200 p-6 dark:border-gray-800">
				<div class="flex items-center justify-between">
					<h2 class="text-2xl font-bold text-gray-900 dark:text-white">Publish new app</h2>
					<button
						aria-label="Close publish modal"
						class="flex h-8 w-8 items-center justify-center rounded-lg text-gray-400 transition-colors hover:bg-gray-100 hover:text-gray-600 dark:hover:bg-gray-800 dark:hover:text-gray-300"
						data-close-modal
					>
						<X className="h-5 w-5" />
					</button>
				</div>
			</div>

			<form class="modal__body space-y-6 p-6" id="publishForm">
				<!-- App Basic Info -->
				<div class="grid gap-6 md:grid-cols-2">
					<div>
						<label class="label" for="appTitle">App title *</label>
						<input
							class="input"
							id="appTitle"
							name="title"
							placeholder="My Awesome App"
							required
							type="text"
						/>
					</div>

					<div>
						<label class="label" for="appCategory">Category *</label>
						<select class="input" id="appCategory" name="category" required>
							<option value="">Select category</option>
							<option value="Productivity">Productivity</option>
							<option value="Education">Education</option>
							<option value="Entertainment">Entertainment</option>
							<option value="Lifestyle">Lifestyle</option>
							<option value="Social">Social</option>
							<option value="Games">Games</option>
							<option value="Utilities">Utilities</option>
							<option value="Business">Business</option>
							<option value="Health & Fitness">Health & Fitness</option>
							<option value="Photography">Photography</option>
						</select>
					</div>
				</div>

				<div>
					<label class="label" for="appTagline">Tagline *</label>
					<input
						class="input"
						id="appTagline"
						name="tagline"
						placeholder="Short description of your app"
						required
						type="text"
					/>
				</div>

				<div>
					<label class="label" for="appDescription">Description *</label>
					<textarea
						class="input"
						id="appDescription"
						name="description"
						placeholder="Detailed description of your app's features and benefits"
						required
						rows="4"></textarea>
				</div>

				<!-- App URLs and Links -->
				<div class="grid gap-6 md:grid-cols-2">
					<div>
						<label class="label" for="playStoreUrl">Google Play Store URL *</label>
						<input
							class="input"
							id="playStoreUrl"
							name="playStoreUrl"
							placeholder="https://play.google.com/store/apps/details?id=..."
							required
							type="url"
						/>
					</div>

					<div>
						<label class="label" for="appStoreUrl">Apple App Store URL</label>
						<input
							class="input"
							id="appStoreUrl"
							name="appStoreUrl"
							placeholder="https://apps.apple.com/app/..."
							type="url"
						/>
					</div>
				</div>

				<!-- App Icon and Screenshots -->
				<div class="grid gap-6 md:grid-cols-2">
					<div>
						<label class="label" for="appIcon">App Icon URL *</label>
						<input
							class="input"
							id="appIcon"
							name="icon"
							placeholder="https://example.com/icon.png"
							required
							type="url"
						/>
					</div>

					<div>
						<label class="label" for="appPrice">Price</label>
						<input
							class="input"
							id="appPrice"
							name="price"
							placeholder="Free"
							type="text"
							value="Free"
						/>
					</div>
				</div>

				<div>
					<label class="label" for="appScreenshots">Screenshots URLs (comma separated)</label>
					<textarea
						class="input"
						id="appScreenshots"
						name="screenshots"
						placeholder="https://example.com/screenshot1.png, https://example.com/screenshot2.png"
						rows="3"></textarea>
				</div>

				<!-- App Metrics -->
				<div class="grid gap-6 md:grid-cols-3">
					<div>
						<label class="label" for="appRating">Rating (1-5)</label>
						<input
							class="input"
							id="appRating"
							max="5"
							min="1"
							name="rating"
							step="0.1"
							type="number"
							value="4.5"
						/>
					</div>

					<div>
						<label class="label" for="appDownloads">Downloads</label>
						<input
							class="input"
							id="appDownloads"
							name="downloads"
							placeholder="1K+"
							type="text"
							value="1K+"
						/>
					</div>

					<div>
						<label class="label" for="appVersion">Version</label>
						<input
							class="input"
							id="appVersion"
							name="version"
							placeholder="1.0.0"
							type="text"
							value="1.0.0"
						/>
					</div>
				</div>

				<!-- App Features -->
				<div>
					<label class="label" for="appFeatures">Key Features (one per line)</label>
					<textarea
						class="input"
						id="appFeatures"
						name="features"
						placeholder="Feature 1
Feature 2
Feature 3"
						rows="5"></textarea>
				</div>

				<!-- Submit Buttons -->
				<div
					class="flex items-center justify-end gap-4 border-t border-gray-200 pt-4 dark:border-gray-800"
				>
					<button class="button button--secondary" data-close-modal type="button"> Cancel </button>
					<button class="button button--primary" type="submit"> Publish App </button>
				</div>
			</form>

			<script>
				document.addEventListener("astro:page-load", () => {
					const modal = document.getElementById("publishModal");
					const form = document.getElementById("publishForm") as HTMLFormElement | null;

					if (!modal || !form) return;

					function openPublishModal() {
						modal?.classList.remove("hidden");
						modal?.classList.add("flex");
						document.body.style.overflow = "hidden";
					}
					function closePublishModal() {
						modal?.classList.add("hidden");
						modal?.classList.remove("flex");
						document.body.style.overflow = "auto";
						(form as HTMLFormElement)?.reset();
					}

					document.addEventListener("click", (e) => {
						const t = e.target as Element;
						if (t?.closest("[data-close-modal]") || t === modal) return closePublishModal();
						if (t.closest("[data-open-modal]")) return openPublishModal();
					});
					document.addEventListener("keydown", (e) => {
						if (e.key === "Escape" && !modal.classList.contains("hidden")) closePublishModal();
					});

					function parseListArea(value: FormDataEntryValue | null) {
						return String(value || "")
							.split("\n")
							.map((s) => s.trim())
							.filter(Boolean);
					}
					function parseCsv(value: FormDataEntryValue | null) {
						return String(value || "")
							.split(",")
							.map((s) => s.trim())
							.filter(Boolean);
					}
					function slugify(s: string) {
						return s
							.toLowerCase()
							.normalize("NFD")
							.replace(/[\u0300-\u036f]/g, "")
							.replace(/[^a-z0-9]+/g, "-")
							.replace(/(^-|-$)+/g, "");
					}

					form.addEventListener("submit", async (e) => {
						e.preventDefault();
						const fd = new FormData(form);

						const payload = {
							title: fd.get("title"),
							tagline: fd.get("tagline"),
							description: fd.get("description"),
							playStoreUrl: fd.get("playStoreUrl"),
							appStoreUrl: fd.get("appStoreUrl") || undefined,
							category: fd.get("category"),
							icon: fd.get("icon"),
							price: fd.get("price") || "Free",
							rating: fd.get("rating") || undefined,
							downloads: fd.get("downloads") || undefined,
							version: fd.get("version") || "1.0.0",
							features: parseListArea(fd.get("features")),
							screenshots: parseCsv(fd.get("screenshots")),
							// opcionales:
							locale: "en",
							slug: slugify(String(fd.get("title") || "")),
						};

						try {
							const res = await fetch("/api/apps/create", {
								method: "POST",
								headers: {
									"content-type": "application/json",
									"x-api-key": "supersecret", // cámbialo y usa env en prod
								},
								body: JSON.stringify(payload),
							});

							const json = await res.json();
							if (!res.ok) throw new Error(json.error ? JSON.stringify(json.error) : "Failed");

							alert(`✅ App publicada: ${json.slug}`);
							// refresca la lista (si esta página se sirve SSR, basta con recargar)
							location.reload();
						} catch (err) {
							console.error(err);
							alert("❌ No se pudo publicar el app. Revisa la consola.");
						} finally {
							closePublishModal();
						}
					});
				});
			</script>

			<style>
				.modal__content {
					animation: modalSlideIn 0.3s ease-out;
				}

				@keyframes modalSlideIn {
					from {
						opacity: 0;
						transform: scale(0.95) translateY(-20px);
					}
					to {
						opacity: 1;
						transform: scale(1) translateY(0);
					}
				}
			</style>
		</div>
	</div></BaseLayout
>
